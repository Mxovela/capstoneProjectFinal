package ac.za.mycput.entity;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
/* Author Rodrigue Ndzana
   This is the User class that is mapped to the database table called "users".
   I made used of Lombok library to automatically generate getter and setter, no argument constructor, all argument constructor
 */
@Getter //These annotations are from the Lombok library and automatically generate getter and setter methods for all of the class's fields
@Setter
@NoArgsConstructor // no argument constructor
@AllArgsConstructor
@Entity
@Table(name="users")
public class User
{
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY) // this is from the JPA and specifies that the primary key values are automatically generated by the database using an identify column
    private Long id;

    @Column(nullable=false)
    private String firstName;

    @Column(nullable=false)
    private String lastName;

    @Column(nullable=false, unique=true)
    private String email;

    @Column(nullable=false)
    private String password;

    @ManyToMany(fetch = FetchType.EAGER, cascade=CascadeType.ALL) //user can have many role. therefore we join user and role table.
    @JoinTable(
            name="users_roles",
            joinColumns={@JoinColumn(name="USER_ID", referencedColumnName="ID")}, // user table
            inverseJoinColumns={@JoinColumn(name="ROLE_ID", referencedColumnName="ID")}) // role table -- the target entity
    private List<Role> roles= new ArrayList<>();


}